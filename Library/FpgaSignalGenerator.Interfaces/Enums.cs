//------------------------------------------------------------------------------
// Copyright (C) 2016 Josi Coder

// This program is free software: you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the Free
// Software Foundation, either version 3 of the License, or (at your option)
// any later version.

// This program is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
// more details.

// You should have received a copy of the GNU General Public License along with
// this program. If not, see <http://www.gnu.org/licenses/>.
//--------------------------------------------------------------------------------

namespace CtLab.FpgaSignalGenerator.Interfaces
{
    /// <summary>
    /// Specifies the waveforms that can be generated by the DDS generators.
    /// </summary>
    public enum Waveform : ushort
    {
        // These values must correspond to the FPGA implementation.
        Rectangle = 0,
        Sawtooth = 1,
        Sine = 2
    }

    /// <summary>
    /// Specifies the signal sources that can be connected to DDS generators for modulation and
    /// synchronization.
    /// </summary>
    public enum ModulationAndSynchronizationSource : ushort
    {
        // These values must correspond to the FPGA implementation.
        DdsGenerator0 = 0,
        DdsGenerator1 = 1,
        DdsGenerator2 = 2,
        DdsGenerator3 = 3
    }

    /// <summary>
    /// Specifies the signal sources that can be connected to the outputs.
    /// </summary>
    public enum OutputSource : ushort
    {
        // These values must correspond to the FPGA implementation.
        DdsGenerator0 = 0,
        DdsGenerator1 = 1,
        DdsGenerator2 = 2,
        DdsGenerator3 = 3,
        PulseGenerator = 4
    }

    /// <summary>
    /// Specifies the signal sources that can be measured by the universal counter.
    /// </summary>
    public enum UniversalCounterSource : ushort
    {
        // These values must correspond to the FPGA implementation.
        DdsGenerator0 = 0,
        DdsGenerator1 = 1,
        DdsGenerator2 = 2,
        DdsGenerator3 = 3,
        PulseGenerator = 4,
        External = 5
    }

    /// <summary>
    /// Specifies the measurement modes.
    /// </summary>
    public enum MeasurementMode : ushort
    {
        // These values must correspond to the FPGA implementation.
        Frequency = 0,
        Period = 1
    }

    /// <summary>
    /// Specifies prescaler modes used for period and frequency measurements.
    /// </summary>
    public enum PrescalerMode : ushort
    {
        // These values must correspond to the FPGA implementation.
        GatePeriod_1s = 0,
        GatePeriod_10s = 1,
        GatePeriod_100ms = 2,
        CounterClock_10MHz = 4,
        CounterClock_1MHz = 5,
        CounterClock_100kHz = 6,
        CounterClock_10kHz = 7
    }
}